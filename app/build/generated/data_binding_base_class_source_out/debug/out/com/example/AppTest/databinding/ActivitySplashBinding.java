// Generated by view binder compiler. Do not edit!
package com.example.AppTest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.AppTest.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.ibrahimsn.particle.ParticleView;

public final class ActivitySplashBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button4;

  @NonNull
  public final FloatingActionButton cfb;

  @NonNull
  public final FloatingActionButton fab2;

  @NonNull
  public final FloatingActionButton fab3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final EditText nameEditText;

  @NonNull
  public final ParticleView particleView;

  @NonNull
  public final TextView textView3;

  private ActivitySplashBinding(@NonNull ConstraintLayout rootView, @NonNull Button button4,
      @NonNull FloatingActionButton cfb, @NonNull FloatingActionButton fab2,
      @NonNull FloatingActionButton fab3, @NonNull ImageView imageView4,
      @NonNull EditText nameEditText, @NonNull ParticleView particleView,
      @NonNull TextView textView3) {
    this.rootView = rootView;
    this.button4 = button4;
    this.cfb = cfb;
    this.fab2 = fab2;
    this.fab3 = fab3;
    this.imageView4 = imageView4;
    this.nameEditText = nameEditText;
    this.particleView = particleView;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySplashBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySplashBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_splash, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySplashBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button4;
      Button button4 = rootView.findViewById(id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.cfb;
      FloatingActionButton cfb = rootView.findViewById(id);
      if (cfb == null) {
        break missingId;
      }

      id = R.id.fab2;
      FloatingActionButton fab2 = rootView.findViewById(id);
      if (fab2 == null) {
        break missingId;
      }

      id = R.id.fab3;
      FloatingActionButton fab3 = rootView.findViewById(id);
      if (fab3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = rootView.findViewById(id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      EditText nameEditText = rootView.findViewById(id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.particleView;
      ParticleView particleView = rootView.findViewById(id);
      if (particleView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivitySplashBinding((ConstraintLayout) rootView, button4, cfb, fab2, fab3,
          imageView4, nameEditText, particleView, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
