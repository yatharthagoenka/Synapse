// Generated by view binder compiler. Do not edit!
package com.example.AppTest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.AppTest.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NoteContainerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout layoutNote;

  @NonNull
  public final RoundedImageView noteImageCont;

  @NonNull
  public final TextView noteh1;

  @NonNull
  public final TextView noteh2;

  @NonNull
  public final TextView noteh3;

  private NoteContainerBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout layoutNote,
      @NonNull RoundedImageView noteImageCont, @NonNull TextView noteh1, @NonNull TextView noteh2,
      @NonNull TextView noteh3) {
    this.rootView = rootView;
    this.layoutNote = layoutNote;
    this.noteImageCont = noteImageCont;
    this.noteh1 = noteh1;
    this.noteh2 = noteh2;
    this.noteh3 = noteh3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoteContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoteContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.note_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoteContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout layoutNote = (LinearLayout) rootView;

      id = R.id.noteImageCont;
      RoundedImageView noteImageCont = rootView.findViewById(id);
      if (noteImageCont == null) {
        break missingId;
      }

      id = R.id.noteh1;
      TextView noteh1 = rootView.findViewById(id);
      if (noteh1 == null) {
        break missingId;
      }

      id = R.id.noteh2;
      TextView noteh2 = rootView.findViewById(id);
      if (noteh2 == null) {
        break missingId;
      }

      id = R.id.noteh3;
      TextView noteh3 = rootView.findViewById(id);
      if (noteh3 == null) {
        break missingId;
      }

      return new NoteContainerBinding((LinearLayout) rootView, layoutNote, noteImageCont, noteh1,
          noteh2, noteh3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
