// Generated by view binder compiler. Do not edit!
package com.example.AppTest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.AppTest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NoteDelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView cancelbutton;

  @NonNull
  public final View d2;

  @NonNull
  public final ConstraintLayout delDialog;

  @NonNull
  public final TextView delbutton;

  @NonNull
  public final TextView textnew;

  @NonNull
  public final TextView warn;

  private NoteDelBinding(@NonNull ConstraintLayout rootView, @NonNull TextView cancelbutton,
      @NonNull View d2, @NonNull ConstraintLayout delDialog, @NonNull TextView delbutton,
      @NonNull TextView textnew, @NonNull TextView warn) {
    this.rootView = rootView;
    this.cancelbutton = cancelbutton;
    this.d2 = d2;
    this.delDialog = delDialog;
    this.delbutton = delbutton;
    this.textnew = textnew;
    this.warn = warn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoteDelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoteDelBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.note_del, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoteDelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelbutton;
      TextView cancelbutton = rootView.findViewById(id);
      if (cancelbutton == null) {
        break missingId;
      }

      id = R.id.d2;
      View d2 = rootView.findViewById(id);
      if (d2 == null) {
        break missingId;
      }

      ConstraintLayout delDialog = (ConstraintLayout) rootView;

      id = R.id.delbutton;
      TextView delbutton = rootView.findViewById(id);
      if (delbutton == null) {
        break missingId;
      }

      id = R.id.textnew;
      TextView textnew = rootView.findViewById(id);
      if (textnew == null) {
        break missingId;
      }

      id = R.id.warn;
      TextView warn = rootView.findViewById(id);
      if (warn == null) {
        break missingId;
      }

      return new NoteDelBinding((ConstraintLayout) rootView, cancelbutton, d2, delDialog, delbutton,
          textnew, warn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
